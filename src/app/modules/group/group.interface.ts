/* eslint-disable no-unused-vars */
import { Types } from "mongoose";
// import { USER_ROLE } from "./user.constant";
export interface TGroupMember {
  _id: Types.ObjectId;
  role: "admin" | "member";
  acceptInvitation: boolean;
  lastMessageReadId: Types.ObjectId | null;
}

export interface TGroup {
  groupName: string;
  description?: string;
  creator: Types.ObjectId;
  company?: Types.ObjectId | null;
  status: "active" | "archived";
  members: TGroupMember[];
  createdAt: Date; // Automatically generated by Mongoose
  updatedAt: Date; // Automatically generated by Mongoose
  isArchived:boolean;

}

// export interface TaskModel extends Model<TTask> {
//   //instance methods for checking if the user exist
//   //isTaskExists(name: string): Promise<TTask>;
//   //instance methods for checking if passwords are matched
//   // isPasswordMatched(
//   //   plainTextPassword: string,
//   //   hashedPassword: string
//   // ): Promise<boolean>;
//   // // isJWTIssuedBeforePasswordChanged(
//   // //   passwordChangedTimestamp: Date,
//   // //   jwtIssuedTimestamp: number,
//   // // ): boolean;
// }

// export type TUserRole = keyof typeof USER_ROLE;
